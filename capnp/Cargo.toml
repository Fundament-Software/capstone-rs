[package]

name = "capstone"
version.workspace = true
authors = [
  "David Renshaw <dwrenshaw@gmail.com>",
  "Erik McClure <erikm@fundament.software>",
]
license.workspace = true
description = "runtime library for Cap'n Proto data encoding"
repository.workspace = true
documentation.workspace = true
edition.workspace = true
rust-version.workspace = true
readme = "README.md"

keywords = ["encoding", "protocol", "serialization"]

[lib]
name = "capnp"

[dependencies]
quickcheck = { version = "1", optional = true }

embedded-io = { version = "0.6.1", default-features = false, optional = true }
smallvec = "1.13.1"
rusqlite = { version = "0.31.0", features = ["bundled", "array"] }

[dev-dependencies]
quickcheck = "1"

[features]
alloc = ["embedded-io?/alloc"]
backtrace = ["alloc"]
default = ["std", "alloc"]

rpc_try = []

# If enabled, relaxes alignment requirements on segments.
# This has a performance cost on some targets (e.g. ARMv6).
unaligned = []

# If disabled, turns on no_std, which tells rustc to not link
# with the Rust standard library.
std = ["embedded-io?/std"]

# If enabled, ReadLimiter will use `AtomicUsize` instead of `Cell<usize>`, allowing
# message readers to be `Sync`. Note that AtomicUsize is not supported by all
# rustc targets.
sync_reader = []

#[lints]
#workspace = true

[lints.clippy]
type_complexity = "allow"    # this should be removed in future
missing_safety_doc = "allow" # this should be removed in future
